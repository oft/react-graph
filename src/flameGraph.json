{
    "ReactDOM.render": {
        "Return legacyRenderSubtreeIntoContainer()": {
            "legacyCreateRootFromDOMContainer()": {
                "shouldHydrateDueToLegacyHeuristic": {
                    "getReactRootElementInContainer()": null
                },
                "Return ReactRoot = new ReactSyncRoot()": {
                    "this._internalRoot = createRootImpl() ": {
                        "Return createContainer()": {
                            "Return createFiberRoot()": {
                                "FiberRoot = new FiberRootNode()": {
                                    "createHostRootFiber()": {
                                        "Return createFiber()": {
                                            "Return HostRoot = new FiberNode()": null
                                        }
                                    }
                                }
                            }
                        },
                        "markContainerAsRoot()": null
                    }
                }
            },
            "unbatchedUpdates()": {
                "updateContainer": {
                    "requestCurrentSuspenseConfig": {},
                    "computeExpirationForFiber": {},
                    "updateContainerAtExpirationTime": {
                        "getContextForSubtree": {
                            "getInstance": {},
                            "findCurrentUnmaskedContext": {},
                            "isLegacyContextProvider": {},
                            "processChildContext": {}
                        },
                        "scheduleRootUpdate": {
                            "createUpdate": {},
                            "enqueueUpdate": {
                                "createUpdateQueue": {},
                                "cloneUpdateQueue": {},
                                "appendUpdateToQueue": {}
                            },
                            "scheduleWork": {
                                "checkForNestedUpdates 1": {},
                                "markUpdateTimeFromFiberToRoot 1": {},
                                "checkForNestedUpdates 2": {},
                                "markUpdateTimeFromFiberToRoot 2": {},
                                "checkForInterruption": {},
                                "recordScheduleUpdate": {},
                                "getCurrentPriorityLevel": {},
                                "schedulePendingInteractions": {},
                                "performSyncWorkOnRoot": {
                                    "commitRoot": {
                                        "getCurrentPriorityLevel": {},
                                        "runWithPriority": {
                                            "reactPriorityToSchedulerPriority": {},
                                            "Scheduler_runWithPriority": {
                                                "commitRootImpl": {}
                                            }
                                        }
                                    },
                                    "prepareFreshStack": {},
                                    "startWorkOnPendingInteractions": {},
                                    "pushDispatcher": {},
                                    "pushInteractions": {},
                                    "startWorkLoopTimer": {},
                                    "workLoopSync": {}
                                }
                            }
                        }
                    }
                }
            },
            "Return getPublicRootInstance()": {}
        }
    }
}
